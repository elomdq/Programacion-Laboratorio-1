// FUNCIONES

int cargarArregloAlumnos(stAlumno alumnos[], int dimArreglo)
{
    int i=0;
    char c='s';

    while(i<dimArreglo && c!='n')
    {
        printf("\nIngrese la matricula del alumno: ");
        scanf("%d", &alumnos[i].matricula);
        printf("\nIngrese el nombre del alumno: ");
        fflush(stdin);
        gets(alumnos[i].nombre);
        printf("\nIngrese el genero del alumno (m/f/o): ");
        fflush(stdin);
        scanf("%c", &alumnos[i].genero);

        i++;

        printf("\n");
        printf("Desea cargar otro alumno? s/n: ");
        c = _getch();

        system("cls");
    }

    return i;
}

void mostrarArregloAlumnos(stAlumno alumnos[], int validos)
{
    int i=0;

    for(i=0; i<validos; i++)
    {
        imprimirMatricula(alumnos,i);
        imprimirNombre(alumnos,i);
        imprimirGenero(alumnos,i);
        printf("\n----------------------");
    }
}

void imprimirMatricula(stAlumno alumnos[], int posicion)
{
    printf("\nMatricula: %d", alumnos[posicion].matricula);
}

void imprimirNombre(stAlumno alumnos[], int posicion)
{
    printf("\nNombre: %s", alumnos[posicion].nombre);
}

void imprimirGenero(stAlumno alumnos[], int posicion)
{
    printf("\nGenero: %c", alumnos[posicion].genero);
}


void mostrarPorMatricula(stAlumno alumnos[], int validos, int matricula)
{
    int i=0;

    while(alumnos[i].matricula!=matricula && i<validos)
    {
        i++;
    }

    if(i<validos)
    {
        imprimirMatricula(alumnos, i);
        imprimirNombre(alumnos, i);
        imprimirGenero(alumnos, i);
    }
    else
    {
        printf("No se encontro la matricula ingresada.\n");
    }
}

///Ordenamiento por seleccion

void ordenarArregloAlumnosPorSeleccion(stAlumno alumnos[], int validos){
    int i=0;
    int posicionMenor;

    for(i=0; i<validos-1;i++)
    {
        posicionMenor = encontrarMenor(alumnos, validos, i);
        intercambiarDatosDePosicion(alumnos, validos, posicionMenor, i);
    }

}

int encontrarMenor(stAlumno alumnos[], int validos, int posicion)
{

    int menor=alumnos[posicion].matricula;
    int posicionMenor = posicion;

    int i;

    for(i=posicion+1; i<validos; i++)
    {
        if(alumnos[i].matricula<menor)
        {
            menor=alumnos[i].matricula;
            posicionMenor = i;
        }
    }

    return posicionMenor;
}

void intercambiarDatosDePosicion(stAlumno alumnos[], int validos, int posicionOrigen, int posicionDestino)
{

    stAlumno alumnoAux;

    if(posicionOrigen<validos && posicionDestino<validos)
    {
        alumnoAux = alumnos[posicionDestino];
        alumnos[posicionDestino]=alumnos[posicionOrigen];
        alumnos[posicionOrigen]=alumnoAux;
    }

}
